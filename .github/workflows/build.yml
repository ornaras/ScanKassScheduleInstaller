on: 
  push:
    branches-ignore: [ 'v**.**.**' ]
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    steps:
      - name: Установка Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.75.0-i686-pc-windows-msvc
          override: true
          components: clippy, rustfmt

      - name: Кеширование Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Загрузка репозитория
        uses: actions/checkout@v4

      - name: Cборка
        run: cargo build --release

      - name: Тестирование
        run: cargo test --release --lib

      - name: Выгрузка тестового дистрибутива
        uses: actions/upload-artifact@v4
        id: test
        with:
          name: test
          path: target\release\deps\*.exe          
          overwrite: true
          
      - name: Выгрузка библиотеки
        uses: actions/upload-artifact@v4
        with:
          name: lib
          path: target\release\skatworker_installation.dll
          overwrite: true

      - name: Send message
        uses: aps-m/telegram-notify-action@v1
        with:
          token: ${{ secrets.TELEGRAMBOTTOKEN }}
          to: ${{ secrets.TELEGRAMTARGETID }}
          message: 'Первичный тест установщика планировщика пройден успешно! <a href="${{ steps.test.outputs.artifact-url }}">Скачать тестовый образ</a>'
          parse_mode: 'HTML'
